#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ssms.LTS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ssms")]
	public partial class LTSBase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAntenna(Antenna instance);
    partial void UpdateAntenna(Antenna instance);
    partial void DeleteAntenna(Antenna instance);
    partial void InsertBarcode(Barcode instance);
    partial void UpdateBarcode(Barcode instance);
    partial void DeleteBarcode(Barcode instance);
    partial void InsertBookOut(BookOut instance);
    partial void UpdateBookOut(BookOut instance);
    partial void DeleteBookOut(BookOut instance);
    partial void InsertBrand(Brand instance);
    partial void UpdateBrand(Brand instance);
    partial void DeleteBrand(Brand instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertReader(Reader instance);
    partial void UpdateReader(Reader instance);
    partial void DeleteReader(Reader instance);
    partial void InsertSettings(Settings instance);
    partial void UpdateSettings(Settings instance);
    partial void DeleteSettings(Settings instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public LTSBase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Antenna> Antenna
		{
			get
			{
				return this.GetTable<Antenna>();
			}
		}
		
		public System.Data.Linq.Table<Barcode> Barcode
		{
			get
			{
				return this.GetTable<Barcode>();
			}
		}
		
		public System.Data.Linq.Table<BookOut> BookOut
		{
			get
			{
				return this.GetTable<BookOut>();
			}
		}
		
		public System.Data.Linq.Table<Brand> Brand
		{
			get
			{
				return this.GetTable<Brand>();
			}
		}
		
		public System.Data.Linq.Table<Category> Category
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Item> Item
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Reader> Reader
		{
			get
			{
				return this.GetTable<Reader>();
			}
		}
		
		public System.Data.Linq.Table<Settings> Settings
		{
			get
			{
				return this.GetTable<Settings>();
			}
		}
		
		public System.Data.Linq.Table<Store> Store
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAntenna")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteAntenna([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AntennaID", DbType="Int")] System.Nullable<int> antennaID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), antennaID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBarcode")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="Int")] System.Nullable<int> barcodeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBookOut")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteBookOut([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BookOutID", DbType="Int")] System.Nullable<int> bookOutID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), bookOutID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBrand")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteBrand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandID", DbType="Int")] System.Nullable<int> brandID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brandID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteCategory")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteItem")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteProduct")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteReader")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteReader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReaderID", DbType="Int")] System.Nullable<int> readerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), readerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteSettings")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteSettings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsID", DbType="Int")] System.Nullable<int> settingsID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), settingsID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteStore")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteStore([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Deletesysdiagrams")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Deletesysdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> diagram_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagram_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUser")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_diagramobjects", IsComposable=true)]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public System.Nullable<int> Fn_diagramobjects()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertAntenna")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertAntenna([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AntennaNumber", DbType="Int")] System.Nullable<int> antennaNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReaderID", DbType="Int")] System.Nullable<int> readerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxPower", DbType="Decimal(18,0)")] System.Nullable<decimal> rxPower, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TxPower", DbType="Decimal(18,0)")] System.Nullable<decimal> txPower, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), antennaNumber, readerID, rxPower, txPower, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBarcode")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeNumber", DbType="VarChar(200)")] string barcodeNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeNumber, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBookOut")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertBookOut([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Project", DbType="VarChar(200)")] string project, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="VarChar(300)")] string reason, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, itemID, project, reason, userID, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBrand")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertBrand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandDescription", DbType="VarChar(300)")] string brandDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandName", DbType="VarChar(200)")] string brandName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brandDescription, brandName, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertCategory")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryDescription", DbType="VarChar(300)")] string categoryDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryName", DbType="VarChar(200)")] string categoryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryDescription, categoryName, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertItem")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemStatus", DbType="Bit")] System.Nullable<bool> itemStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TagEPC", DbType="VarChar(200)")] string tagEPC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemStatus, productID, storeID, tagEPC, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertProduct")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="Int")] System.Nullable<int> barcodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandID", DbType="Int")] System.Nullable<int> brandID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductDescription", DbType="VarChar(200)")] string productDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="VarChar(200)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeID, brandID, categoryID, productDescription, productName, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertReader")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertReader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IPaddress", DbType="VarChar(200)")] string iPaddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumAntennas", DbType="Int")] System.Nullable<int> numAntennas, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsID", DbType="Int")] System.Nullable<int> settingsID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iPaddress, numAntennas, settingsID, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertSettings")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertSettings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsName", DbType="VarChar(200)")] string settingsName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsSelect", DbType="Bit")] System.Nullable<bool> settingsSelect, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), settingsName, settingsSelect, storeID, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertStore")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertStore([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreLocation", DbType="VarChar(200)")] string storeLocation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreName", DbType="VarChar(200)")] string storeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeLocation, storeName, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Insertsysdiagrams")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Insertsysdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> principal_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), definition, name, principal_id, version, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertUser")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserActivated", DbType="Bit")] System.Nullable<bool> userActivated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAdmin", DbType="Bit")] System.Nullable<bool> userAdmin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEmail", DbType="VarChar(200)")] string userEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserIdentityNumber", DbType="VarChar(200)")] string userIdentityNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(200)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserPassword", DbType="VarChar(200)")] string userPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserSurname", DbType="VarChar(200)")] string userSurname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] ref System.Nullable<int> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userActivated, userAdmin, userEmail, userIdentityNumber, userName, userPassword, userSurname, iD);
			iD = ((System.Nullable<int>)(result.GetParameterValue(7)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_alterdiagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_alterdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_creatediagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_creatediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, version, definition);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_dropdiagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_dropdiagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_helpdiagramdefinition")]
		public ISingleResult<Sp_helpdiagramdefinitionResult> Sp_helpdiagramdefinition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramdefinitionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_helpdiagrams")]
		public ISingleResult<Sp_helpdiagramsResult> Sp_helpdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id);
			return ((ISingleResult<Sp_helpdiagramsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_renamediagram")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Sp_renamediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string new_diagramname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, new_diagramname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateAntenna")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateAntenna([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AntennaNumber", DbType="Int")] System.Nullable<int> antennaNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReaderID", DbType="Int")] System.Nullable<int> readerID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="RxPower", DbType="Decimal(18,0)")] System.Nullable<decimal> rxPower, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TxPower", DbType="Decimal(18,0)")] System.Nullable<decimal> txPower, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AntennaID", DbType="Int")] System.Nullable<int> antennaID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), antennaNumber, readerID, rxPower, txPower, antennaID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBarcode")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeNumber", DbType="VarChar(200)")] string barcodeNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="Int")] System.Nullable<int> barcodeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeNumber, barcodeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBookOut")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateBookOut([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Project", DbType="VarChar(200)")] string project, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Reason", DbType="VarChar(300)")] string reason, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BookOutID", DbType="Int")] System.Nullable<int> bookOutID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, itemID, project, reason, userID, bookOutID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBrand")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateBrand([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandDescription", DbType="VarChar(300)")] string brandDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandName", DbType="VarChar(200)")] string brandName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandID", DbType="Int")] System.Nullable<int> brandID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brandDescription, brandName, brandID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCategory")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryDescription", DbType="VarChar(300)")] string categoryDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryName", DbType="VarChar(200)")] string categoryName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), categoryDescription, categoryName, categoryID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateItem")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemStatus", DbType="Bit")] System.Nullable<bool> itemStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TagEPC", DbType="VarChar(200)")] string tagEPC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="Int")] System.Nullable<int> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemStatus, productID, storeID, tagEPC, itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateProduct")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="Int")] System.Nullable<int> barcodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrandID", DbType="Int")] System.Nullable<int> brandID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CategoryID", DbType="Int")] System.Nullable<int> categoryID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductDescription", DbType="VarChar(200)")] string productDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductName", DbType="VarChar(200)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductID", DbType="Int")] System.Nullable<int> productID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeID, brandID, categoryID, productDescription, productName, productID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateReader")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateReader([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IPaddress", DbType="VarChar(200)")] string iPaddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="NumAntennas", DbType="Int")] System.Nullable<int> numAntennas, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsID", DbType="Int")] System.Nullable<int> settingsID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReaderID", DbType="Int")] System.Nullable<int> readerID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iPaddress, numAntennas, settingsID, readerID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateSettings")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateSettings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsName", DbType="VarChar(200)")] string settingsName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsSelect", DbType="Bit")] System.Nullable<bool> settingsSelect, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SettingsID", DbType="Int")] System.Nullable<int> settingsID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), settingsName, settingsSelect, storeID, settingsID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateStore")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateStore([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreLocation", DbType="VarChar(200)")] string storeLocation, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreName", DbType="VarChar(200)")] string storeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeLocation, storeName, storeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Updatesysdiagrams")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int Updatesysdiagrams([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarBinary(MAX)")] System.Data.Linq.Binary definition, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> principal_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> version, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> diagram_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), definition, name, principal_id, version, diagram_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUser")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserActivated", DbType="Bit")] System.Nullable<bool> userActivated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAdmin", DbType="Bit")] System.Nullable<bool> userAdmin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEmail", DbType="VarChar(200)")] string userEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserIdentityNumber", DbType="VarChar(200)")] string userIdentityNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(200)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserPassword", DbType="VarChar(200)")] string userPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserSurname", DbType="VarChar(200)")] string userSurname, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="Int")] System.Nullable<int> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userActivated, userAdmin, userEmail, userIdentityNumber, userName, userPassword, userSurname, userID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Antenna")]
	public partial class Antenna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AntennaID;
		
		private decimal _TxPower;
		
		private decimal _RxPower;
		
		private int _AntennaNumber;
		
		private int _ReaderID;
		
		private EntityRef<Reader> _Reader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAntennaIDChanging(int value);
    partial void OnAntennaIDChanged();
    partial void OnTxPowerChanging(decimal value);
    partial void OnTxPowerChanged();
    partial void OnRxPowerChanging(decimal value);
    partial void OnRxPowerChanged();
    partial void OnAntennaNumberChanging(int value);
    partial void OnAntennaNumberChanged();
    partial void OnReaderIDChanging(int value);
    partial void OnReaderIDChanged();
    #endregion
		
		public Antenna()
		{
			this._Reader = default(EntityRef<Reader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntennaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AntennaID
		{
			get
			{
				return this._AntennaID;
			}
			set
			{
				if ((this._AntennaID != value))
				{
					this.OnAntennaIDChanging(value);
					this.SendPropertyChanging();
					this._AntennaID = value;
					this.SendPropertyChanged("AntennaID");
					this.OnAntennaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxPower", DbType="Decimal(18,0) NOT NULL")]
		public decimal TxPower
		{
			get
			{
				return this._TxPower;
			}
			set
			{
				if ((this._TxPower != value))
				{
					this.OnTxPowerChanging(value);
					this.SendPropertyChanging();
					this._TxPower = value;
					this.SendPropertyChanged("TxPower");
					this.OnTxPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxPower", DbType="Decimal(18,0) NOT NULL")]
		public decimal RxPower
		{
			get
			{
				return this._RxPower;
			}
			set
			{
				if ((this._RxPower != value))
				{
					this.OnRxPowerChanging(value);
					this.SendPropertyChanging();
					this._RxPower = value;
					this.SendPropertyChanged("RxPower");
					this.OnRxPowerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AntennaNumber", DbType="Int NOT NULL")]
		public int AntennaNumber
		{
			get
			{
				return this._AntennaNumber;
			}
			set
			{
				if ((this._AntennaNumber != value))
				{
					this.OnAntennaNumberChanging(value);
					this.SendPropertyChanging();
					this._AntennaNumber = value;
					this.SendPropertyChanged("AntennaNumber");
					this.OnAntennaNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderID", DbType="Int NOT NULL")]
		public int ReaderID
		{
			get
			{
				return this._ReaderID;
			}
			set
			{
				if ((this._ReaderID != value))
				{
					if (this._Reader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReaderIDChanging(value);
					this.SendPropertyChanging();
					this._ReaderID = value;
					this.SendPropertyChanged("ReaderID");
					this.OnReaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AntennaReader", Storage="_Reader", ThisKey="ReaderID", OtherKey="ReaderID", IsForeignKey=true)]
		public Reader Reader
		{
			get
			{
				return this._Reader.Entity;
			}
			set
			{
				Reader previousValue = this._Reader.Entity;
				if (((previousValue != value) 
							|| (this._Reader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reader.Entity = null;
						previousValue.Antenna.Remove(this);
					}
					this._Reader.Entity = value;
					if ((value != null))
					{
						value.Antenna.Add(this);
						this._ReaderID = value.ReaderID;
					}
					else
					{
						this._ReaderID = default(int);
					}
					this.SendPropertyChanged("Reader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Barcode")]
	public partial class Barcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BarcodeID;
		
		private string _BarcodeNumber;
		
		private EntitySet<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBarcodeIDChanging(int value);
    partial void OnBarcodeIDChanged();
    partial void OnBarcodeNumberChanging(string value);
    partial void OnBarcodeNumberChanged();
    #endregion
		
		public Barcode()
		{
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BarcodeID
		{
			get
			{
				return this._BarcodeID;
			}
			set
			{
				if ((this._BarcodeID != value))
				{
					this.OnBarcodeIDChanging(value);
					this.SendPropertyChanging();
					this._BarcodeID = value;
					this.SendPropertyChanged("BarcodeID");
					this.OnBarcodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeNumber", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BarcodeNumber
		{
			get
			{
				return this._BarcodeNumber;
			}
			set
			{
				if ((this._BarcodeNumber != value))
				{
					this.OnBarcodeNumberChanging(value);
					this.SendPropertyChanging();
					this._BarcodeNumber = value;
					this.SendPropertyChanged("BarcodeNumber");
					this.OnBarcodeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemBarcode", Storage="_Product", ThisKey="BarcodeID", OtherKey="BarcodeID", DeleteRule="NO ACTION")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Barcode = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Barcode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookOut")]
	public partial class BookOut : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookOutID;
		
		private string _Reason;
		
		private string _Project;
		
		private System.DateTime _Date;
		
		private int _UserID;
		
		private int _ItemID;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookOutIDChanging(int value);
    partial void OnBookOutIDChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    partial void OnProjectChanging(string value);
    partial void OnProjectChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    #endregion
		
		public BookOut()
		{
			this._Item = default(EntityRef<Item>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookOutID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookOutID
		{
			get
			{
				return this._BookOutID;
			}
			set
			{
				if ((this._BookOutID != value))
				{
					this.OnBookOutIDChanging(value);
					this.SendPropertyChanging();
					this._BookOutID = value;
					this.SendPropertyChanged("BookOutID");
					this.OnBookOutIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Project", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Project
		{
			get
			{
				return this._Project;
			}
			set
			{
				if ((this._Project != value))
				{
					this.OnProjectChanging(value);
					this.SendPropertyChanging();
					this._Project = value;
					this.SendPropertyChanged("Project");
					this.OnProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BookOutItem", Storage="_Item", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.BookOut.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.BookOut.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BookOutUSer", Storage="_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.BookOut.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.BookOut.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Brand")]
	public partial class Brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BrandID;
		
		private string _BrandName;
		
		private string _BrandDescription;
		
		private EntitySet<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    partial void OnBrandDescriptionChanging(string value);
    partial void OnBrandDescriptionChanged();
    #endregion
		
		public Brand()
		{
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandDescription", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string BrandDescription
		{
			get
			{
				return this._BrandDescription;
			}
			set
			{
				if ((this._BrandDescription != value))
				{
					this.OnBrandDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BrandDescription = value;
					this.SendPropertyChanged("BrandDescription");
					this.OnBrandDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemBrand", Storage="_Product", ThisKey="BrandID", OtherKey="BrandID", DeleteRule="NO ACTION")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private string _CategoryName;
		
		private string _CategoryDescription;
		
		private EntitySet<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategoryDescriptionChanging(string value);
    partial void OnCategoryDescriptionChanged();
    #endregion
		
		public Category()
		{
			this._Product = new EntitySet<Product>(new Action<Product>(this.attach_Product), new Action<Product>(this.detach_Product));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDescription", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string CategoryDescription
		{
			get
			{
				return this._CategoryDescription;
			}
			set
			{
				if ((this._CategoryDescription != value))
				{
					this.OnCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CategoryDescription = value;
					this.SendPropertyChanged("CategoryDescription");
					this.OnCategoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemCategory", Storage="_Product", ThisKey="CategoryID", OtherKey="CategoryID", DeleteRule="NO ACTION")]
		public EntitySet<Product> Product
		{
			get
			{
				return this._Product;
			}
			set
			{
				this._Product.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Product(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private string _TagEPC;
		
		private bool _ItemStatus;
		
		private int _ProductID;
		
		private int _StoreID;
		
		private EntitySet<BookOut> _BookOut;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnTagEPCChanging(string value);
    partial void OnTagEPCChanged();
    partial void OnItemStatusChanging(bool value);
    partial void OnItemStatusChanged();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    #endregion
		
		public Item()
		{
			this._BookOut = new EntitySet<BookOut>(new Action<BookOut>(this.attach_BookOut), new Action<BookOut>(this.detach_BookOut));
			this._Product = default(EntityRef<Product>);
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagEPC", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TagEPC
		{
			get
			{
				return this._TagEPC;
			}
			set
			{
				if ((this._TagEPC != value))
				{
					this.OnTagEPCChanging(value);
					this.SendPropertyChanging();
					this._TagEPC = value;
					this.SendPropertyChanged("TagEPC");
					this.OnTagEPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemStatus", DbType="Bit NOT NULL")]
		public bool ItemStatus
		{
			get
			{
				return this._ItemStatus;
			}
			set
			{
				if ((this._ItemStatus != value))
				{
					this.OnItemStatusChanging(value);
					this.SendPropertyChanging();
					this._ItemStatus = value;
					this.SendPropertyChanged("ItemStatus");
					this.OnItemStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="Int NOT NULL")]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int NOT NULL")]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BookOutItem", Storage="_BookOut", ThisKey="ItemID", OtherKey="ItemID", DeleteRule="NO ACTION")]
		public EntitySet<BookOut> BookOut
		{
			get
			{
				return this._BookOut;
			}
			set
			{
				this._BookOut.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemProduct", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemStore", Storage="_Store", ThisKey="StoreID", OtherKey="StoreID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._StoreID = value.StoreID;
					}
					else
					{
						this._StoreID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookOut(BookOut entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_BookOut(BookOut entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private string _ProductName;
		
		private string _ProductDescription;
		
		private int _BarcodeID;
		
		private int _BrandID;
		
		private int _CategoryID;
		
		private EntityRef<Barcode> _Barcode;
		
		private EntityRef<Brand> _Brand;
		
		private EntityRef<Category> _Category;
		
		private EntitySet<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnBarcodeIDChanging(int value);
    partial void OnBarcodeIDChanged();
    partial void OnBrandIDChanging(int value);
    partial void OnBrandIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public Product()
		{
			this._Barcode = default(EntityRef<Barcode>);
			this._Brand = default(EntityRef<Brand>);
			this._Category = default(EntityRef<Category>);
			this._Item = new EntitySet<Item>(new Action<Item>(this.attach_Item), new Action<Item>(this.detach_Item));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeID", DbType="Int NOT NULL")]
		public int BarcodeID
		{
			get
			{
				return this._BarcodeID;
			}
			set
			{
				if ((this._BarcodeID != value))
				{
					if (this._Barcode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBarcodeIDChanging(value);
					this.SendPropertyChanging();
					this._BarcodeID = value;
					this.SendPropertyChanged("BarcodeID");
					this.OnBarcodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="Int NOT NULL")]
		public int BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._Brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemBarcode", Storage="_Barcode", ThisKey="BarcodeID", OtherKey="BarcodeID", IsForeignKey=true)]
		public Barcode Barcode
		{
			get
			{
				return this._Barcode.Entity;
			}
			set
			{
				Barcode previousValue = this._Barcode.Entity;
				if (((previousValue != value) 
							|| (this._Barcode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Barcode.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._Barcode.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._BarcodeID = value.BarcodeID;
					}
					else
					{
						this._BarcodeID = default(int);
					}
					this.SendPropertyChanged("Barcode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemBrand", Storage="_Brand", ThisKey="BrandID", OtherKey="BrandID", IsForeignKey=true)]
		public Brand Brand
		{
			get
			{
				return this._Brand.Entity;
			}
			set
			{
				Brand previousValue = this._Brand.Entity;
				if (((previousValue != value) 
							|| (this._Brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Brand.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._Brand.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._BrandID = value.BrandID;
					}
					else
					{
						this._BrandID = default(int);
					}
					this.SendPropertyChanged("Brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemCategory", Storage="_Category", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Product.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Product.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemProduct", Storage="_Item", ThisKey="ProductID", OtherKey="ProductID", DeleteRule="NO ACTION")]
		public EntitySet<Item> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reader")]
	public partial class Reader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReaderID;
		
		private string _IPaddress;
		
		private int _NumAntennas;
		
		private int _SettingsID;
		
		private EntitySet<Antenna> _Antenna;
		
		private EntityRef<Settings> _Settings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReaderIDChanging(int value);
    partial void OnReaderIDChanged();
    partial void OnIPaddressChanging(string value);
    partial void OnIPaddressChanged();
    partial void OnNumAntennasChanging(int value);
    partial void OnNumAntennasChanged();
    partial void OnSettingsIDChanging(int value);
    partial void OnSettingsIDChanged();
    #endregion
		
		public Reader()
		{
			this._Antenna = new EntitySet<Antenna>(new Action<Antenna>(this.attach_Antenna), new Action<Antenna>(this.detach_Antenna));
			this._Settings = default(EntityRef<Settings>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ReaderID
		{
			get
			{
				return this._ReaderID;
			}
			set
			{
				if ((this._ReaderID != value))
				{
					this.OnReaderIDChanging(value);
					this.SendPropertyChanging();
					this._ReaderID = value;
					this.SendPropertyChanged("ReaderID");
					this.OnReaderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPaddress", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string IPaddress
		{
			get
			{
				return this._IPaddress;
			}
			set
			{
				if ((this._IPaddress != value))
				{
					this.OnIPaddressChanging(value);
					this.SendPropertyChanging();
					this._IPaddress = value;
					this.SendPropertyChanged("IPaddress");
					this.OnIPaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumAntennas", DbType="Int NOT NULL")]
		public int NumAntennas
		{
			get
			{
				return this._NumAntennas;
			}
			set
			{
				if ((this._NumAntennas != value))
				{
					this.OnNumAntennasChanging(value);
					this.SendPropertyChanging();
					this._NumAntennas = value;
					this.SendPropertyChanged("NumAntennas");
					this.OnNumAntennasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingsID", DbType="Int NOT NULL")]
		public int SettingsID
		{
			get
			{
				return this._SettingsID;
			}
			set
			{
				if ((this._SettingsID != value))
				{
					if (this._Settings.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSettingsIDChanging(value);
					this.SendPropertyChanging();
					this._SettingsID = value;
					this.SendPropertyChanged("SettingsID");
					this.OnSettingsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_AntennaReader", Storage="_Antenna", ThisKey="ReaderID", OtherKey="ReaderID", DeleteRule="NO ACTION")]
		public EntitySet<Antenna> Antenna
		{
			get
			{
				return this._Antenna;
			}
			set
			{
				this._Antenna.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SettingsReader", Storage="_Settings", ThisKey="SettingsID", OtherKey="SettingsID", IsForeignKey=true)]
		public Settings Settings
		{
			get
			{
				return this._Settings.Entity;
			}
			set
			{
				Settings previousValue = this._Settings.Entity;
				if (((previousValue != value) 
							|| (this._Settings.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Settings.Entity = null;
						previousValue.Reader.Remove(this);
					}
					this._Settings.Entity = value;
					if ((value != null))
					{
						value.Reader.Add(this);
						this._SettingsID = value.SettingsID;
					}
					else
					{
						this._SettingsID = default(int);
					}
					this.SendPropertyChanged("Settings");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Antenna(Antenna entity)
		{
			this.SendPropertyChanging();
			entity.Reader = this;
		}
		
		private void detach_Antenna(Antenna entity)
		{
			this.SendPropertyChanging();
			entity.Reader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Settings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SettingsID;
		
		private string _SettingsName;
		
		private bool _SettingsSelect;
		
		private int _StoreID;
		
		private EntitySet<Reader> _Reader;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingsIDChanging(int value);
    partial void OnSettingsIDChanged();
    partial void OnSettingsNameChanging(string value);
    partial void OnSettingsNameChanged();
    partial void OnSettingsSelectChanging(bool value);
    partial void OnSettingsSelectChanged();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    #endregion
		
		public Settings()
		{
			this._Reader = new EntitySet<Reader>(new Action<Reader>(this.attach_Reader), new Action<Reader>(this.detach_Reader));
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SettingsID
		{
			get
			{
				return this._SettingsID;
			}
			set
			{
				if ((this._SettingsID != value))
				{
					this.OnSettingsIDChanging(value);
					this.SendPropertyChanging();
					this._SettingsID = value;
					this.SendPropertyChanged("SettingsID");
					this.OnSettingsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingsName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string SettingsName
		{
			get
			{
				return this._SettingsName;
			}
			set
			{
				if ((this._SettingsName != value))
				{
					this.OnSettingsNameChanging(value);
					this.SendPropertyChanging();
					this._SettingsName = value;
					this.SendPropertyChanged("SettingsName");
					this.OnSettingsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingsSelect", DbType="Bit NOT NULL")]
		public bool SettingsSelect
		{
			get
			{
				return this._SettingsSelect;
			}
			set
			{
				if ((this._SettingsSelect != value))
				{
					this.OnSettingsSelectChanging(value);
					this.SendPropertyChanging();
					this._SettingsSelect = value;
					this.SendPropertyChanged("SettingsSelect");
					this.OnSettingsSelectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", DbType="Int NOT NULL")]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_SettingsReader", Storage="_Reader", ThisKey="SettingsID", OtherKey="SettingsID", DeleteRule="NO ACTION")]
		public EntitySet<Reader> Reader
		{
			get
			{
				return this._Reader;
			}
			set
			{
				this._Reader.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_StoreSettings", Storage="_Store", ThisKey="StoreID", OtherKey="StoreID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Settings.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Settings.Add(this);
						this._StoreID = value.StoreID;
					}
					else
					{
						this._StoreID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reader(Reader entity)
		{
			this.SendPropertyChanging();
			entity.Settings = this;
		}
		
		private void detach_Reader(Reader entity)
		{
			this.SendPropertyChanging();
			entity.Settings = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StoreID;
		
		private string _StoreName;
		
		private string _StoreLocation;
		
		private EntitySet<Item> _Item;
		
		private EntitySet<Settings> _Settings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStoreIDChanging(int value);
    partial void OnStoreIDChanged();
    partial void OnStoreNameChanging(string value);
    partial void OnStoreNameChanged();
    partial void OnStoreLocationChanging(string value);
    partial void OnStoreLocationChanged();
    #endregion
		
		public Store()
		{
			this._Item = new EntitySet<Item>(new Action<Item>(this.attach_Item), new Action<Item>(this.detach_Item));
			this._Settings = new EntitySet<Settings>(new Action<Settings>(this.attach_Settings), new Action<Settings>(this.detach_Settings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string StoreName
		{
			get
			{
				return this._StoreName;
			}
			set
			{
				if ((this._StoreName != value))
				{
					this.OnStoreNameChanging(value);
					this.SendPropertyChanging();
					this._StoreName = value;
					this.SendPropertyChanged("StoreName");
					this.OnStoreNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoreLocation", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string StoreLocation
		{
			get
			{
				return this._StoreLocation;
			}
			set
			{
				if ((this._StoreLocation != value))
				{
					this.OnStoreLocationChanging(value);
					this.SendPropertyChanging();
					this._StoreLocation = value;
					this.SendPropertyChanged("StoreLocation");
					this.OnStoreLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_ItemStore", Storage="_Item", ThisKey="StoreID", OtherKey="StoreID", DeleteRule="NO ACTION")]
		public EntitySet<Item> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_StoreSettings", Storage="_Settings", ThisKey="StoreID", OtherKey="StoreID", DeleteRule="NO ACTION")]
		public EntitySet<Settings> Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				this._Settings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_Settings(Settings entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Settings(Settings entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserIdentityNumber;
		
		private string _UserName;
		
		private string _UserSurname;
		
		private string _UserEmail;
		
		private string _UserPassword;
		
		private bool _UserAdmin;
		
		private bool _UserActivated;
		
		private EntitySet<BookOut> _BookOut;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserIdentityNumberChanging(string value);
    partial void OnUserIdentityNumberChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserSurnameChanging(string value);
    partial void OnUserSurnameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserAdminChanging(bool value);
    partial void OnUserAdminChanged();
    partial void OnUserActivatedChanging(bool value);
    partial void OnUserActivatedChanged();
    #endregion
		
		public User()
		{
			this._BookOut = new EntitySet<BookOut>(new Action<BookOut>(this.attach_BookOut), new Action<BookOut>(this.detach_BookOut));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIdentityNumber", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserIdentityNumber
		{
			get
			{
				return this._UserIdentityNumber;
			}
			set
			{
				if ((this._UserIdentityNumber != value))
				{
					this.OnUserIdentityNumberChanging(value);
					this.SendPropertyChanging();
					this._UserIdentityNumber = value;
					this.SendPropertyChanged("UserIdentityNumber");
					this.OnUserIdentityNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserSurname", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserSurname
		{
			get
			{
				return this._UserSurname;
			}
			set
			{
				if ((this._UserSurname != value))
				{
					this.OnUserSurnameChanging(value);
					this.SendPropertyChanging();
					this._UserSurname = value;
					this.SendPropertyChanged("UserSurname");
					this.OnUserSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="Bit NOT NULL")]
		public bool UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActivated", DbType="Bit NOT NULL")]
		public bool UserActivated
		{
			get
			{
				return this._UserActivated;
			}
			set
			{
				if ((this._UserActivated != value))
				{
					this.OnUserActivatedChanging(value);
					this.SendPropertyChanging();
					this._UserActivated = value;
					this.SendPropertyChanged("UserActivated");
					this.OnUserActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BookOutUSer", Storage="_BookOut", ThisKey="UserID", OtherKey="UserID", DeleteRule="NO ACTION")]
		public EntitySet<BookOut> BookOut
		{
			get
			{
				return this._BookOut;
			}
			set
			{
				this._BookOut.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookOut(BookOut entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_BookOut(BookOut entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	public partial class Sp_helpdiagramdefinitionResult
	{
		
		private System.Nullable<int> _Version;
		
		private System.Data.Linq.Binary _Definition;
		
		public Sp_helpdiagramdefinitionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="version", Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this._Version = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="definition", Storage="_Definition", DbType="VarBinary(MAX)", CanBeNull=true)]
		public System.Data.Linq.Binary Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this._Definition = value;
				}
			}
		}
	}
	
	public partial class Sp_helpdiagramsResult
	{
		
		private string _Database;
		
		private string _Name;
		
		private System.Nullable<int> _ID;
		
		private string _Owner;
		
		private System.Nullable<int> _OwnerID;
		
		public Sp_helpdiagramsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Database", DbType="NVarChar(128)")]
		public string Database
		{
			get
			{
				return this._Database;
			}
			set
			{
				if ((this._Database != value))
				{
					this._Database = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(128)")]
		public string Owner
		{
			get
			{
				return this._Owner;
			}
			set
			{
				if ((this._Owner != value))
				{
					this._Owner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this._OwnerID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
